name: API Deploy

on:
  push:
    branches: [ master ]
    paths:
      - 'packages/api-stack/**'
      - 'packages/lib/**'
      - 'packages/api-tests/**'
      - '.github/workflows/api.yml'   

permissions: read-all

jobs:

  build_test_and_package:
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ steps.package-version.outputs.current-version }}
    permissions:
      contents: read  
    steps:
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install
        run: yarn --frozen-lockfile
      - name: Unit Test
        run: yarn workspace @tranmere-web/api-stack test
        env:
          DD_KEY: ${{ secrets.DD_KEY }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
          CF_KEY: ${{ secrets.CF_KEY }}
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@3cf273023a0dda27efcd3164bdfb51908dd46a5b

  aws_cdk:
    runs-on: ubuntu-latest
    needs: build_test_and_package
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'      
      - name: Install
        run: yarn --frozen-lockfile   

      - name: Deploy CDK
        run: |
          yarn workspace @tranmere-web/api-stack cdk deploy --require-approval never "*"
        env:
          AWS_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
          CF_KEY: ${{ secrets.CF_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DD_TAGS: git.commit.sha:${{ github.sha }},git.repository_url:github.com/${{ github.repository }}

  data_dog:
    runs-on: ubuntu-latest
    needs: [build_test_and_package, aws_cdk]
    steps:
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'    
      - name: Install Data Dog CI
        run: | 
          yarn global add @datadog/datadog-ci@${{ vars.DataDogCIVersion}}
      # https://docs.datadoghq.com/serverless/aws_lambda/installation/nodejs/?tab=awssam    
      - name: Instrument
        run: | 
          datadog-ci lambda instrument --functions-regex "^TranmereWebStack" -r eu-west-1 -v ${{ vars.DataDogNodeLayerVersion}} -e ${{ vars.DataDogExtensionLayerVersion}} --service tranmere-web --env prod --version ${{needs.build_test_and_package.outputs.current-version}} --merge-xray-traces false --tracing true --capture-lambda-payload true
        env:
          AWS_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATADOG_API_KEY: ${{ secrets.DD_KEY }}
          DATADOG_SITE: datadoghq.eu
      - name: InstrumentImages
        run: | 
          datadog-ci lambda instrument --functions-regex "^ServerlessImageHandler-BackEndImageHandlerLambdaFu" -r eu-west-1 -v ${{ vars.DataDogNodeLayerVersion}} -e ${{ vars.DataDogExtensionLayerVersion}} --service image-handler --env prod --version ${{needs.build_test_and_package.outputs.current-version}} --merge-xray-traces false
        env:
          AWS_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATADOG_API_KEY: ${{ secrets.DD_KEY }}
          DATADOG_SITE: datadoghq.eu


  api_acceptance_test:
    runs-on: ubuntu-latest
    needs: [aws_cdk, data_dog]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'      
      - name: Post Deploy Checks
        run: 
          yarn workspace @tranmere-web/api-tests api