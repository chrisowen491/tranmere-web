name: Deploy

on:
  push:
    branches: [ master ]
    paths:
      - 'graphql/**'
      - 'lambda/**'
      - 'lib/**' 
      - '.github/workflows/**'   

jobs:
  build_test_and_package:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Install AWS CDK
        run: | 
          yarn global add aws-cdk
      - name: Install
        run: yarn
      - name: Unit Test
        run: yarn test
        env:
          DD_KEY: ${{ secrets.DD_KEY }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
          CF_KEY: ${{ secrets.CF_KEY }}
      - name: Automated Version Bump
        uses: phips28/gh-action-bump-version@master
        with:
          tag-prefix: 'v'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: bump
        run: echo "version=$(node tag.js)" >> $GITHUB_OUTPUT

  #trigger_web_deploy:
  #  runs-on: ubuntu-latest
  #  needs: build_test_and_package
  #  steps:
  #    - name: Call Web Hook
  #      run: curl -X POST https://api.cloudflare.com/client/v4/pages/webhooks/deploy_hooks/d244ae02-7152-4c32-b6c8-d75c023e735c       

  aws_cdk:
    runs-on: ubuntu-latest
    needs: build_test_and_package
    steps:
      - uses: actions/checkout@v4
      - name: Install AWS CDK
        run: | 
          yarn global add aws-cdk
      - name: Install
        run: yarn                  
      - name: Deploy CDK
        run: |
          cdk deploy --require-approval never "*"
        env:
          AWS_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
          CF_SPACE: ${{ secrets.CF_SPACE }}
          CF_KEY: ${{ secrets.CF_KEY }}
          SCRAPE_ID: ${{ secrets.SCRAPE_ID }}
          SCRAPE_SEASON: ${{ secrets.SCRAPE_SEASON }}
          SCRAPE_URL: ${{ secrets.SCRAPE_URL }}
          DD_TAGS: git.commit.sha:${{ github.sha }},git.repository_url:github.com/${{ github.repository }}

  data_dog:
    runs-on: ubuntu-latest
    needs: [build_test_and_package, aws_cdk]
    steps:
      - name: Install Data Dog CI
        run: | 
          yarn global add @datadog/datadog-ci@${{ vars.DataDogCIVersion}}
      # https://docs.datadoghq.com/serverless/aws_lambda/installation/nodejs/?tab=awssam    
      - name: Instrument
        run: | 
          datadog-ci lambda instrument --functions-regex "^TranmereWebStack" -r eu-west-1 -v ${{ vars.DataDogNodeLayerVersion}} -e ${{ vars.DataDogExtensionLayerVersion}} --service tranmere-web --env prod --version ${{needs.build_test_and_package.outputs.version}} --merge-xray-traces false
        env:
          AWS_REGION: eu-west-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DATADOG_API_KEY: ${{ secrets.DD_KEY }}
          DATADOG_SITE: datadoghq.eu

  api_acceptance_test:
    runs-on: ubuntu-latest
    needs: [aws_cdk, data_dog]
    steps:
      - uses: actions/checkout@v4
      - name: Install Newman
        run: | 
          yarn global add newman
      - name: Post Deploy Checks
        run: 
          newman run ./api_tests/postman-collection.json -e ./api_tests/env/aws-prod.json --env-var "testApiKey=${{ secrets.API_KEY }}"

  web_acceptance_test:
    runs-on: ubuntu-latest
    needs: [aws_cdk, data_dog]
    steps:
      - uses: actions/checkout@v4
      - name: Install Newman
        run: | 
          yarn global add newman
      - name: Post Deploy Checks
        run: 
          newman run ./api_tests/postman-collection.json -e ./api_tests/env/cf-prod.json --env-var "testApiKey=${{ secrets.API_KEY }}"