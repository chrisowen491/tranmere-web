name: Pull Request Tests

on:
  pull_request:
    branches: [ "master" ]

permissions: read-all

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write 
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '20'      
      - name: Install
        run: yarn --frozen-lockfile   
      - name: Web Build
        run: yarn cloudflare-build
        env:
          API_KEY: ${{ secrets.API_KEY }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CF_SPACE }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CF_KEY }}
          AUTH0_CLIENT_SECRET: "dummy_value"
          AUTH0_DOMAIN: "dummy_value"
          AUTH0_CLIENT_ID: "dummy_value"
          AUTH0_ADMIN_EMAIL: "dummy_value"
          AUTH0_SECRET: "dummy_value"
          APP_BASE_URL: "http://localhost:3001"
          API_PORT: "443"
          API_PROTOCOL: "https" 
          API_DOMAIN: "api.tranmere-web.com"

      - uses: chrnorm/deployment-action@51e93982518dc06e500fe65559032a439663aaac
        name: Create GitHub deployment
        id: deployment
        with:
          token: '${{ secrets.GITHUB_TOKEN }}'
          environment-url: https://www.tranmere-web.com
          environment: pr
          description: "Pages Deployment"   
  

      - name: Web Deploy
        id: deploy
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65
        with:
          apiToken: ${{ secrets.CLOUDFLARE_AUTH_KEY }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: ./packages/site
          command: pages deploy .vercel/output/static --project-name=tranmere-web --branch=${{ github.head_ref }}                
      
      - name: Check HTTP status
        uses: gerdemann/http-status-code@f8e07763c720fb0ee5e95c49605d38fc78dd60f2
        with:
          url: ${{ steps.deploy.outputs.deployment-url }}
          code: 200
          timeout: 60
          interval: 10

      - name: Run Binoculars
        uses: foo-software/binoculars-action@40b0a9d3f6242214723446d3835e203271ade291
        with:
          accessToken: ${{ secrets.BINOCULARS_GITHUB_ACCESS_TOKEN }}
          author: ${{ github.actor }}
          branch: ${{ github.ref }}
          enableComments: true
          minScore: 80
          urls: ${{ steps.deploy.outputs.deployment-url }}
          sha: ${{ github.sha }}        

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806
        with:
          token: '${{ github.token }}'
          environment-url: ${{ steps.deploy.outputs.deployment-url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'success'          
  
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@9a72af4586197112e0491ea843682b5dc280d806
        with:
          token: '${{ github.token }}'
          environment-url: ${{ steps.deployment.outputs.environment_url }}
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
          state: 'failure'          
  